# Generated by Django 2.1.1 on 2018-10-29 06:32

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('account_id', models.AutoField(db_column='Account_ID', primary_key=True, serialize=False)),
                ('account_name', models.CharField(blank=True, db_column='Account_Name', max_length=255, null=True)),
                ('account_address', models.CharField(blank=True, db_column='Account_Address', max_length=255, null=True)),
                ('account_phone', models.CharField(blank=True, db_column='Account_Phone', max_length=255, null=True)),
                ('account_fax', models.CharField(blank=True, db_column='Account_Fax', max_length=255, null=True)),
                ('primary_contact', models.CharField(blank=True, db_column='Primary_Contact', max_length=255, null=True)),
                ('primary_contact_phone', models.CharField(blank=True, db_column='Primary_Contact_Phone', max_length=255, null=True)),
                ('primary_contact_email', models.CharField(blank=True, db_column='Primary_Contact_Email', max_length=255, null=True)),
                ('secondary_contact', models.CharField(blank=True, db_column='Secondary_Contact', max_length=255, null=True)),
                ('secondary_contact_phone', models.CharField(blank=True, db_column='Secondary_Contact_Phone', max_length=255, null=True)),
                ('secondary_contact_email', models.CharField(blank=True, db_column='Secondary_Contact_Email', max_length=255, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=255, null=True)),
                ('api_key', models.CharField(blank=True, db_column='API_Key', max_length=255, null=True)),
                ('hos_key', models.CharField(blank=True, db_column='HOS_Key', max_length=255, null=True)),
            ],
            options={
                'db_table': 'ACCOUNT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountBanner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('banner_url', models.CharField(blank=True, db_column='Banner_URL', max_length=255, null=True)),
                ('banner_height', models.IntegerField(blank=True, db_column='Banner_Height', null=True)),
            ],
            options={
                'db_table': 'ACCOUNT_BANNER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountDefaults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(blank=True, db_column='Account_ID', max_length=255, null=True)),
                ('default_speed_threshold', models.CharField(blank=True, db_column='Default_Speed_Threshold', max_length=255, null=True)),
                ('default_distance_unit', models.CharField(blank=True, db_column='Default_Distance_Unit', max_length=255, null=True)),
                ('reverse_geocoding_engine', models.CharField(blank=True, db_column='Reverse_Geocoding_Engine', max_length=255, null=True)),
                ('default_volume_unit', models.CharField(blank=True, db_column='Default_Volume_Unit', max_length=255, null=True)),
                ('archival_period', models.IntegerField(blank=True, db_column='Archival_Period', null=True)),
                ('geofence_radius', models.FloatField(blank=True, db_column='Geofence_Radius', null=True)),
                ('support_url', models.CharField(blank=True, db_column='Support_URL', max_length=255, null=True)),
                ('date_format', models.IntegerField(blank=True, db_column='Date_Format', null=True)),
                ('date_seperator', models.CharField(blank=True, db_column='Date_Seperator', max_length=1, null=True)),
                ('dist_correction', models.FloatField(blank=True, db_column='Dist_Correction', null=True)),
                ('health_time', models.IntegerField(blank=True, db_column='Health_Time', null=True)),
                ('email_name', models.CharField(blank=True, db_column='EMail_Name', max_length=50, null=True)),
                ('email_address', models.CharField(blank=True, db_column='EMail_Address', max_length=50, null=True)),
                ('alert_name', models.CharField(blank=True, db_column='Alert_Name', max_length=50, null=True)),
                ('alert_address', models.CharField(blank=True, db_column='Alert_Address', max_length=50, null=True)),
                ('history_gap_secs', models.IntegerField(blank=True, db_column='History_Gap_Secs', null=True)),
                ('idle_time_secs', models.IntegerField(blank=True, db_column='Idle_Time_Secs', null=True)),
                ('command_one_label', models.CharField(blank=True, db_column='Command_One_Label', max_length=45, null=True)),
                ('command_one', models.CharField(blank=True, db_column='Command_One', max_length=45, null=True)),
                ('command_one_status', models.IntegerField(blank=True, db_column='Command_One_Status', null=True)),
                ('command_two_label', models.CharField(blank=True, db_column='Command_Two_Label', max_length=45, null=True)),
                ('command_two', models.CharField(blank=True, db_column='Command_Two', max_length=45, null=True)),
                ('command_two_status', models.IntegerField(blank=True, db_column='Command_Two_Status', null=True)),
                ('command_three_label', models.CharField(blank=True, db_column='Command_Three_Label', max_length=45, null=True)),
                ('command_three', models.CharField(blank=True, db_column='Command_Three', max_length=45, null=True)),
                ('command_three_status', models.IntegerField(blank=True, db_column='Command_Three_Status', null=True)),
                ('command_four_label', models.CharField(blank=True, db_column='Command_Four_Label', max_length=45, null=True)),
                ('command_four', models.CharField(blank=True, db_column='Command_Four', max_length=45, null=True)),
                ('command_four_status', models.IntegerField(blank=True, db_column='Command_Four_Status', null=True)),
            ],
            options={
                'db_table': 'ACCOUNT_DEFAULTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('feature_index', models.IntegerField(blank=True, db_column='Feature_Index', null=True)),
            ],
            options={
                'db_table': 'ACCOUNT_FEATURE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('map_api', models.CharField(blank=True, db_column='Map_API', max_length=255, null=True)),
                ('map_api_key', models.CharField(blank=True, db_column='Map_API_Key', max_length=400, null=True)),
            ],
            options={
                'db_table': 'ACCOUNT_MAP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=50, null=True)),
                ('contact_name', models.CharField(blank=True, db_column='Contact_Name', max_length=50, null=True)),
                ('alert_type', models.CharField(blank=True, db_column='Alert_Type', max_length=20, null=True)),
                ('network_operator', models.CharField(blank=True, db_column='Network_Operator', max_length=50, null=True)),
                ('phone_email', models.CharField(blank=True, db_column='Phone_Email', max_length=50, null=True)),
                ('speed', models.IntegerField(blank=True, db_column='Speed', null=True)),
                ('cell_io', models.IntegerField(blank=True, db_column='Cell_IO', null=True)),
                ('time', models.IntegerField(blank=True, db_column='Time', null=True)),
                ('fence', models.IntegerField(blank=True, db_column='Fence', null=True)),
            ],
            options={
                'db_table': 'ALERT_CONTACTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertIndex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_type', models.CharField(blank=True, db_column='Index_Type', max_length=50, null=True)),
                ('index_value', models.IntegerField(blank=True, db_column='Index_Value', null=True)),
            ],
            options={
                'db_table': 'ALERT_INDEX',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertMaster',
            fields=[
                ('alert_index', models.AutoField(db_column='Alert_Index', primary_key=True, serialize=False)),
                ('alert_description', models.CharField(blank=True, db_column='Alert_Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'ALERT_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertRules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=50, null=True)),
                ('auth_passengers', models.IntegerField(blank=True, db_column='Auth_Passengers', null=True)),
                ('active_on_movement', models.IntegerField(blank=True, db_column='Active_On_Movement', null=True)),
                ('mofrom', models.FloatField(blank=True, db_column='MoFrom', null=True)),
                ('moto', models.FloatField(blank=True, db_column='MoTo', null=True)),
                ('tufrom', models.FloatField(blank=True, db_column='TuFrom', null=True)),
                ('tuto', models.FloatField(blank=True, db_column='TuTo', null=True)),
                ('wefrom', models.FloatField(blank=True, db_column='WeFrom', null=True)),
                ('weto', models.FloatField(blank=True, db_column='WeTo', null=True)),
                ('thfrom', models.FloatField(blank=True, db_column='ThFrom', null=True)),
                ('thto', models.FloatField(blank=True, db_column='ThTo', null=True)),
                ('frfrom', models.FloatField(blank=True, db_column='FrFrom', null=True)),
                ('frto', models.FloatField(blank=True, db_column='FrTo', null=True)),
                ('safrom', models.FloatField(blank=True, db_column='SaFrom', null=True)),
                ('sato', models.FloatField(blank=True, db_column='SaTo', null=True)),
                ('sufrom', models.FloatField(blank=True, db_column='SuFrom', null=True)),
                ('suto', models.FloatField(blank=True, db_column='SuTo', null=True)),
                ('cm_1', models.IntegerField(blank=True, db_column='CM_1', null=True)),
                ('cm_2', models.IntegerField(blank=True, db_column='CM_2', null=True)),
                ('cm_3', models.IntegerField(blank=True, db_column='CM_3', null=True)),
                ('cm_4', models.IntegerField(blank=True, db_column='CM_4', null=True)),
                ('cm_5', models.IntegerField(blank=True, db_column='CM_5', null=True)),
            ],
            options={
                'db_table': 'ALERT_RULES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthorizedFence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
            ],
            options={
                'db_table': 'AUTHORIZED_FENCE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_status', models.CharField(blank=True, db_column='Billing_Status', max_length=255, null=True)),
            ],
            options={
                'db_table': 'BILLING_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceData',
            fields=[
                ('record_index', models.AutoField(db_column='Record_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, db_column='Altitude', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=255, null=True)),
                ('operator', models.CharField(blank=True, db_column='Operator', max_length=255, null=True)),
                ('field_strength', models.CharField(blank=True, db_column='Field_Strength', max_length=2, null=True)),
                ('distance', models.CharField(blank=True, db_column='Distance', max_length=10, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
                ('state', models.CharField(blank=True, db_column='State', max_length=2, null=True)),
                ('azimuth', models.IntegerField(blank=True, db_column='Azimuth', null=True)),
                ('speed_dispatch', models.IntegerField(blank=True, db_column='Speed_Dispatch', null=True)),
            ],
            options={
                'db_table': 'DEVICE_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceDataView',
            fields=[
                ('record_index', models.AutoField(db_column='Record_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, db_column='Altitude', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=255, null=True)),
                ('operator', models.CharField(blank=True, db_column='Operator', max_length=255, null=True)),
                ('field_strength', models.CharField(blank=True, db_column='Field_Strength', max_length=2, null=True)),
                ('distance', models.CharField(blank=True, db_column='Distance', max_length=10, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'DEVICE_DATA_VIEW',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('group_index', models.IntegerField(blank=True, db_column='Group_Index', null=True)),
            ],
            options={
                'db_table': 'DEVICE_GROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceGroupMaster',
            fields=[
                ('group_index', models.AutoField(db_column='Group_Index', primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, db_column='Group_Name', max_length=255, null=True)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
            ],
            options={
                'db_table': 'DEVICE_GROUP_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceGroupUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('group_index', models.IntegerField(blank=True, db_column='Group_Index', null=True)),
            ],
            options={
                'db_table': 'DEVICE_GROUP_USER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceQueue',
            fields=[
                ('queue_index', models.AutoField(db_column='Queue_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('command', models.CharField(blank=True, db_column='Command', max_length=1024, null=True)),
                ('command_status', models.IntegerField(blank=True, db_column='Command_Status', null=True)),
            ],
            options={
                'db_table': 'DEVICE_QUEUE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceRegister',
            fields=[
                ('device_index', models.AutoField(db_column='Device_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('device_type_id', models.CharField(blank=True, db_column='Device_Type_ID', max_length=50, null=True)),
                ('sim_no', models.CharField(blank=True, db_column='SIM_No', max_length=50, null=True)),
                ('phone_no', models.CharField(blank=True, db_column='Phone_No', max_length=20, null=True)),
                ('device_status', models.CharField(blank=True, db_column='Device_Status', max_length=20, null=True)),
                ('asset_no', models.CharField(blank=True, db_column='Asset_No', max_length=20, null=True)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=255, null=True)),
                ('driver', models.CharField(blank=True, db_column='Driver', max_length=50, null=True)),
                ('gmt_drift', models.CharField(blank=True, db_column='GMT_Drift', max_length=10, null=True)),
                ('speed_threshold', models.CharField(blank=True, db_column='Speed_Threshold', max_length=10, null=True)),
                ('mileage', models.CharField(blank=True, db_column='Mileage', max_length=10, null=True)),
                ('added_on', models.CharField(blank=True, db_column='Added_On', max_length=20, null=True)),
                ('billing_status', models.CharField(blank=True, db_column='Billing_Status', max_length=20, null=True)),
                ('time_zone', models.CharField(blank=True, db_column='Time_Zone', max_length=45, null=True)),
            ],
            options={
                'db_table': 'DEVICE_REGISTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
            ],
            options={
                'db_table': 'DEVICE_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceType',
            fields=[
                ('device_type_id', models.AutoField(db_column='Device_Type_ID', primary_key=True, serialize=False)),
                ('device_type', models.CharField(blank=True, db_column='Device_Type', max_length=255, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'DEVICE_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DriverLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('driver_status', models.CharField(blank=True, db_column='Driver_Status', max_length=20, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=20, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'DRIVER_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DtcMaster',
            fields=[
                ('dtc_index', models.AutoField(db_column='DTC_Index', primary_key=True, serialize=False)),
                ('dtc_no', models.CharField(blank=True, db_column='DTC_No', max_length=10, null=True)),
                ('dtc_description', models.CharField(blank=True, db_column='DTC_Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'DTC_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DvirLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('dvir_type', models.IntegerField(blank=True, db_column='DVIR_Type', null=True)),
                ('dvir_status', models.CharField(blank=True, db_column='DVIR_Status', max_length=255, null=True)),
                ('dvir_comments', models.CharField(blank=True, db_column='DVIR_Comments', max_length=50, null=True)),
                ('dvir_condition', models.CharField(blank=True, db_column='DVIR_Condition', max_length=20, null=True)),
                ('dvir_defects', models.CharField(blank=True, db_column='DVIR_Defects', max_length=20, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'DVIR_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeMaster',
            fields=[
                ('employee_id', models.IntegerField(db_column='Employee_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=20)),
                ('pr_id', models.CharField(db_column='PR_ID', max_length=20)),
            ],
            options={
                'db_table': 'EMPLOYEE_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FeatureMaster',
            fields=[
                ('feature_index', models.AutoField(db_column='Feature_Index', primary_key=True, serialize=False)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=255, null=True)),
                ('feature', models.CharField(blank=True, db_column='Feature', max_length=255, null=True)),
            ],
            options={
                'db_table': 'FEATURE_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoFence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=20, null=True)),
                ('radius', models.CharField(blank=True, db_column='Radius', max_length=5, null=True)),
            ],
            options={
                'db_table': 'GEO_FENCE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoFenceAlerts',
            fields=[
                ('alert_id', models.AutoField(db_column='Alert_ID', primary_key=True, serialize=False)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=20, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=20, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=5, null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
                ('trip_index', models.IntegerField(blank=True, db_column='Trip_Index', null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'GEO_FENCE_ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoFencePolygon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
            ],
            options={
                'db_table': 'GEO_FENCE_POLYGON',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoFencePolygonPoints',
            fields=[
                ('point_id', models.AutoField(primary_key=True, serialize=False)),
                ('geo_fence_polygon_name', models.CharField(max_length=20)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('account_id', models.PositiveIntegerField(db_column='Account_ID')),
            ],
            options={
                'db_table': 'GEO_FENCE_POLYGON_POINTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeoFenceUserAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=20, null=True)),
                ('account_id', models.CharField(blank=True, db_column='Account_ID', max_length=20, null=True)),
            ],
            options={
                'db_table': 'GEO_FENCE_USER_ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GfmiA603Stop',
            fields=[
                ('message_index', models.AutoField(db_column='Message_Index', primary_key=True, serialize=False)),
                ('unique_id', models.CharField(blank=True, db_column='Unique_ID', max_length=10, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=50, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=255, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('text', models.CharField(blank=True, db_column='Text', max_length=255, null=True)),
                ('create_epoch_time', models.IntegerField(blank=True, db_column='Create_Epoch_Time', null=True)),
                ('reached_epoch_time', models.IntegerField(blank=True, db_column='Reached_Epoch_Time', null=True)),
                ('end_epoch_time', models.IntegerField(blank=True, db_column='End_Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'GFMI_A603_STOP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpsHealth',
            fields=[
                ('record_index', models.AutoField(db_column='Record_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(db_column='IMEI', max_length=50)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('fix', models.IntegerField(blank=True, db_column='Fix', null=True)),
            ],
            options={
                'db_table': 'GPS_HEALTH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HbData',
            fields=[
                ('hb_index', models.AutoField(db_column='HB_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('hb', models.CharField(blank=True, db_column='HB', max_length=40, null=True)),
                ('hb_status', models.CharField(blank=True, db_column='HB_Status', max_length=10, null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=10, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'HB_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IconSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_set', models.CharField(blank=True, db_column='Icon_Set', max_length=20, null=True)),
            ],
            options={
                'db_table': 'ICON_SET',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IdleData',
            fields=[
                ('idle_index', models.AutoField(db_column='Idle_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'IDLE_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InspectionList',
            fields=[
                ('list_index', models.AutoField(db_column='List_Index', primary_key=True, serialize=False)),
                ('element_name', models.CharField(blank=True, db_column='Element_Name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'INSPECTION_LIST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IoData',
            fields=[
                ('io_index', models.AutoField(db_column='IO_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('io', models.CharField(blank=True, db_column='IO', max_length=40, null=True)),
                ('io_status', models.CharField(blank=True, db_column='IO_Status', max_length=10, null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=10, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'IO_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IoLabels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('io', models.CharField(blank=True, db_column='IO', max_length=20, null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=20, null=True)),
            ],
            options={
                'db_table': 'IO_LABELS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IoStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('io', models.CharField(blank=True, db_column='IO', max_length=20, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=20, null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=20, null=True)),
            ],
            options={
                'db_table': 'IO_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('log_index', models.AutoField(db_column='Log_Index', primary_key=True, serialize=False)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=20, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=20, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('activity', models.CharField(blank=True, db_column='Activity', max_length=255, null=True)),
            ],
            options={
                'db_table': 'LOGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LrHistory',
            fields=[
                ('lr_index', models.AutoField(db_column='LR_Index', primary_key=True, serialize=False)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=10, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=10, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
            ],
            options={
                'db_table': 'LR_HISTORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api', models.CharField(blank=True, db_column='API', max_length=255, null=True)),
            ],
            options={
                'db_table': 'MAP_API',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moum',
            fields=[
                ('message_index', models.AutoField(db_column='Message_Index', primary_key=True, serialize=False)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=10, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=10, null=True)),
                ('message', models.CharField(blank=True, db_column='Message', max_length=255, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('read_by_username', models.CharField(blank=True, db_column='Read_By_Username', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=50, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=5, null=True)),
                ('device_status', models.CharField(blank=True, db_column='Device_Status', max_length=5, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'MOUM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mtum',
            fields=[
                ('message_index', models.AutoField(db_column='Message_Index', primary_key=True, serialize=False)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=10, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=10, null=True)),
                ('message', models.CharField(blank=True, db_column='Message', max_length=255, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('sent_by_username', models.CharField(blank=True, db_column='Sent_By_Username', max_length=50, null=True)),
            ],
            options={
                'db_table': 'MTUM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MtumCanned',
            fields=[
                ('message_index', models.AutoField(db_column='Message_Index', primary_key=True, serialize=False)),
                ('message', models.CharField(blank=True, db_column='Message', max_length=255, null=True)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
            ],
            options={
                'db_table': 'MTUM_CANNED',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(db_column='Notification_ID', primary_key=True, serialize=False)),
                ('from_name', models.CharField(blank=True, db_column='From_Name', max_length=255, null=True)),
                ('from_email', models.CharField(blank=True, db_column='From_EMail', max_length=255, null=True)),
                ('subject', models.CharField(blank=True, db_column='Subject', max_length=255, null=True)),
                ('body', models.CharField(blank=True, db_column='Body', max_length=1000, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=50, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=50, null=True)),
                ('account_id', models.CharField(blank=True, db_column='Account_ID', max_length=50, null=True)),
            ],
            options={
                'db_table': 'NOTIFICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObdData',
            fields=[
                ('record_index', models.AutoField(db_column='Record_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
                ('odometer', models.CharField(blank=True, db_column='Odometer', max_length=20, null=True)),
                ('batvolt', models.CharField(blank=True, db_column='BatVolt', max_length=10, null=True)),
                ('rpm', models.IntegerField(blank=True, db_column='RPM', null=True)),
                ('vin', models.CharField(blank=True, db_column='VIN', max_length=50, null=True)),
                ('mf', models.CharField(blank=True, db_column='MF', max_length=20, null=True)),
                ('engine_load', models.CharField(blank=True, db_column='Engine_Load', max_length=20, null=True)),
                ('throttle', models.CharField(blank=True, db_column='Throttle', max_length=20, null=True)),
                ('coolant', models.CharField(blank=True, db_column='Coolant', max_length=20, null=True)),
                ('fuel_level', models.CharField(blank=True, db_column='Fuel_Level', max_length=20, null=True)),
                ('mil', models.CharField(blank=True, db_column='MIL', max_length=20, null=True)),
                ('fuel_used', models.CharField(blank=True, db_column='Fuel_Used', max_length=20, null=True)),
                ('dtc', models.CharField(blank=True, db_column='DTC', max_length=45, null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
            ],
            options={
                'db_table': 'OBD_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParentAccount',
            fields=[
                ('account_id', models.IntegerField(db_column='Account_ID', primary_key=True, serialize=False)),
                ('parent_account_id', models.IntegerField(blank=True, db_column='Parent_Account_ID', null=True)),
            ],
            options={
                'db_table': 'PARENT_ACCOUNT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostedSpeedData',
            fields=[
                ('ps_index', models.AutoField(db_column='PS_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('posted_speed', models.CharField(blank=True, db_column='Posted_Speed', max_length=40, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=10, null=True)),
                ('difference', models.IntegerField(blank=True, db_column='Difference', null=True)),
                ('alert_dispatch', models.CharField(blank=True, db_column='Alert_Dispatch', max_length=2, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'POSTED_SPEED_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_index', models.IntegerField(blank=True, db_column='Profile_Index', null=True)),
                ('feature_index', models.IntegerField(blank=True, db_column='Feature_Index', null=True)),
            ],
            options={
                'db_table': 'PROFILE_FEATURE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileMaster',
            fields=[
                ('profile_index', models.AutoField(db_column='Profile_Index', primary_key=True, serialize=False)),
                ('profile_name', models.CharField(blank=True, db_column='Profile_Name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'PROFILE_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RevGeoApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api', models.CharField(blank=True, db_column='API', max_length=255, null=True)),
            ],
            options={
                'db_table': 'REV_GEO_API',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RouteMaster',
            fields=[
                ('route_index', models.AutoField(db_column='Route_Index', primary_key=True, serialize=False)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('route_label', models.CharField(blank=True, db_column='Route_Label', max_length=50, null=True)),
                ('start_geofence', models.CharField(blank=True, db_column='Start_Geofence', max_length=30, null=True)),
                ('end_geofence', models.CharField(blank=True, db_column='End_Geofence', max_length=30, null=True)),
                ('user_defined_distance', models.IntegerField(blank=True, db_column='User_Defined_Distance', null=True)),
                ('usps_route_name', models.CharField(blank=True, db_column='USPS_Route_Name', max_length=45, null=True)),
                ('usps_trip_name', models.CharField(blank=True, db_column='USPS_Trip_Name', max_length=45, null=True)),
                ('usps_trip_leg', models.CharField(blank=True, db_column='USPS_Trip_Leg', max_length=10, null=True)),
                ('nassstart', models.CharField(blank=True, db_column='NASSStart', max_length=45, null=True)),
                ('nassend', models.CharField(blank=True, db_column='NASSEnd', max_length=45, null=True)),
            ],
            options={
                'db_table': 'ROUTE_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SerialData',
            fields=[
                ('record_index', models.AutoField(db_column='Record_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, db_column='Latitude', max_length=255, null=True)),
                ('longitude', models.CharField(blank=True, db_column='Longitude', max_length=255, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('altitude', models.CharField(blank=True, db_column='Altitude', max_length=255, null=True)),
                ('speed', models.CharField(blank=True, db_column='Speed', max_length=255, null=True)),
                ('location_name', models.CharField(blank=True, db_column='Location_Name', max_length=255, null=True)),
                ('data', models.CharField(blank=True, db_column='Data', max_length=50, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'SERIAL_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SessionData',
            fields=[
                ('session_index', models.AutoField(db_column='Session_Index', primary_key=True, serialize=False)),
                ('iccid', models.CharField(blank=True, db_column='ICCID', max_length=50, null=True)),
                ('eventid', models.CharField(blank=True, db_column='EventID', max_length=50, null=True)),
                ('eventtype', models.CharField(blank=True, db_column='EventType', max_length=50, null=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=50, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=50, null=True)),
                ('sessionstart', models.CharField(blank=True, db_column='SessionStart', max_length=50, null=True)),
                ('sessionend', models.CharField(blank=True, db_column='SessionEnd', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SESSION_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SessionDataView',
            fields=[
                ('session_index', models.AutoField(db_column='Session_Index', primary_key=True, serialize=False)),
                ('iccid', models.CharField(blank=True, db_column='ICCID', max_length=50, null=True)),
                ('eventid', models.CharField(blank=True, db_column='EventID', max_length=50, null=True)),
                ('eventtype', models.CharField(blank=True, db_column='EventType', max_length=50, null=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=50, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=50, null=True)),
                ('sessionstart', models.CharField(blank=True, db_column='SessionStart', max_length=50, null=True)),
                ('sessionend', models.CharField(blank=True, db_column='SessionEnd', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SESSION_DATA_VIEW',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StateRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, db_column='State', max_length=20, null=True)),
                ('code', models.CharField(blank=True, db_column='Code', max_length=2, null=True)),
                ('time_zone', models.CharField(blank=True, db_column='Time_Zone', max_length=2, null=True)),
                ('gmt', models.CharField(blank=True, db_column='GMT', max_length=10, null=True)),
                ('dst', models.CharField(blank=True, db_column='DST', max_length=10, null=True)),
                ('time_change', models.CharField(blank=True, db_column='Time_Change', max_length=10, null=True)),
                ('gas_tax', models.CharField(blank=True, db_column='GAS_Tax', max_length=10, null=True)),
                ('diesel_tax', models.CharField(blank=True, db_column='DIESEL_Tax', max_length=10, null=True)),
            ],
            options={
                'db_table': 'STATE_REGISTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smtp_host', models.CharField(blank=True, db_column='SMTP_HOST', max_length=50, null=True)),
                ('smtp_port', models.CharField(blank=True, db_column='SMTP_PORT', max_length=10, null=True)),
                ('smtp_user_name', models.CharField(blank=True, db_column='SMTP_USER_NAME', max_length=50, null=True)),
                ('smtp_password', models.CharField(blank=True, db_column='SMTP_PASSWORD', max_length=50, null=True)),
                ('debug', models.IntegerField(blank=True, db_column='DEBUG', null=True)),
                ('map_api', models.CharField(blank=True, db_column='Map_API', max_length=255, null=True)),
                ('map_api_key', models.CharField(blank=True, db_column='Map_API_Key', max_length=255, null=True)),
            ],
            options={
                'db_table': 'SYSTEM_CONFIGURATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TagAssignment',
            fields=[
                ('tag_index', models.AutoField(db_column='Tag_Index', primary_key=True, serialize=False)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('driver', models.CharField(blank=True, db_column='Driver', max_length=50, null=True)),
                ('tag_id', models.CharField(blank=True, db_column='Tag_ID', max_length=50, null=True, unique=True)),
            ],
            options={
                'db_table': 'TAG_ASSIGNMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('report_index', models.AutoField(db_column='Report_Index', primary_key=True, serialize=False)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=20, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=20, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=50, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('device_type', models.CharField(blank=True, db_column='Device_Type', max_length=100, null=True)),
                ('stock_type', models.CharField(blank=True, db_column='Stock_Type', max_length=50, null=True)),
                ('physical_condition', models.CharField(blank=True, db_column='Physical_Condition', max_length=50, null=True)),
                ('power', models.CharField(blank=True, db_column='Power', max_length=50, null=True)),
                ('com_port', models.CharField(blank=True, db_column='COM_Port', max_length=10, null=True)),
                ('com_port_comments', models.CharField(blank=True, db_column='COM_Port_Comments', max_length=255, null=True)),
                ('gsm_reg', models.CharField(blank=True, db_column='GSM_Reg', max_length=10, null=True)),
                ('gsm_reg_comments', models.CharField(blank=True, db_column='GSM_Reg_Comments', max_length=255, null=True)),
                ('gps_fix', models.CharField(blank=True, db_column='GPS_Fix', max_length=10, null=True)),
                ('gps_fix_comments', models.CharField(blank=True, db_column='GPS_Fix_Comments', max_length=255, null=True)),
                ('hardware_ver', models.CharField(blank=True, db_column='Hardware_Ver', max_length=100, null=True)),
                ('gprs_state', models.CharField(blank=True, db_column='GPRS_State', max_length=10, null=True)),
                ('tcp_state', models.CharField(blank=True, db_column='TCP_State', max_length=10, null=True)),
                ('server_data', models.CharField(blank=True, db_column='Server_Data', max_length=10, null=True)),
                ('io_check', models.CharField(blank=True, db_column='IO_Check', max_length=10, null=True)),
                ('io_check_comments', models.CharField(blank=True, db_column='IO_Check_Comments', max_length=255, null=True)),
                ('battery', models.CharField(blank=True, db_column='Battery', max_length=10, null=True)),
                ('battery_comments', models.CharField(blank=True, db_column='Battery_Comments', max_length=255, null=True)),
                ('general_comments', models.CharField(blank=True, db_column='General_Comments', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'TEST_REPORT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripApi',
            fields=[
                ('trip_api_index', models.AutoField(db_column='Trip_API_Index', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('trip_id', models.CharField(blank=True, db_column='Trip_ID', max_length=50, null=True)),
                ('start_date_stamp', models.CharField(blank=True, db_column='Start_Date_Stamp', max_length=50, null=True)),
                ('start_time_stamp', models.CharField(blank=True, db_column='Start_Time_Stamp', max_length=50, null=True)),
                ('end_date_stamp', models.CharField(blank=True, db_column='End_Date_Stamp', max_length=50, null=True)),
                ('end_time_stamp', models.CharField(blank=True, db_column='End_Time_Stamp', max_length=50, null=True)),
            ],
            options={
                'db_table': 'TRIP_API',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripComments',
            fields=[
                ('comment_id', models.AutoField(db_column='Comment_ID', primary_key=True, serialize=False)),
                ('trip_index', models.IntegerField(blank=True, db_column='Trip_Index', null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=50, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=50, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRIP_COMMENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripMaster',
            fields=[
                ('trip_index', models.AutoField(db_column='Trip_Index', primary_key=True, serialize=False)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('route_index', models.IntegerField(blank=True, db_column='Route_Index', null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('start_date_stamp', models.CharField(blank=True, db_column='Start_Date_Stamp', max_length=50, null=True)),
                ('start_time_stamp', models.CharField(blank=True, db_column='Start_Time_Stamp', max_length=50, null=True)),
                ('actual_start_date_stamp', models.CharField(blank=True, db_column='Actual_Start_Date_Stamp', max_length=50, null=True)),
                ('actual_start_time_stamp', models.CharField(blank=True, db_column='Actual_Start_Time_Stamp', max_length=50, null=True)),
                ('end_date_stamp', models.CharField(blank=True, db_column='End_Date_Stamp', max_length=50, null=True)),
                ('end_time_stamp', models.CharField(blank=True, db_column='End_Time_Stamp', max_length=50, null=True)),
                ('actual_end_date_stamp', models.CharField(blank=True, db_column='Actual_End_Date_Stamp', max_length=50, null=True)),
                ('actual_end_time_stamp', models.CharField(blank=True, db_column='Actual_End_Time_Stamp', max_length=50, null=True)),
                ('trip_status_id', models.IntegerField(blank=True, db_column='Trip_Status_ID', null=True)),
                ('usps_status_id', models.IntegerField(blank=True, db_column='USPS_Status_ID', null=True)),
            ],
            options={
                'db_table': 'TRIP_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripStatus',
            fields=[
                ('trip_status_id', models.AutoField(db_column='Trip_Status_ID', primary_key=True, serialize=False)),
                ('trip_status', models.CharField(blank=True, db_column='Trip_Status', max_length=20, null=True)),
            ],
            options={
                'db_table': 'TRIP_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TripSummaryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('vin', models.CharField(blank=True, db_column='VIN', max_length=50, null=True)),
                ('asset_no', models.CharField(blank=True, db_column='Asset_No', max_length=50, null=True)),
                ('max_speed', models.CharField(blank=True, db_column='Max_Speed', max_length=20, null=True)),
                ('avg_speed', models.CharField(blank=True, db_column='Avg_Speed', max_length=20, null=True)),
                ('trip_distance', models.CharField(blank=True, db_column='Trip_Distance', max_length=20, null=True)),
                ('idel_time', models.CharField(blank=True, db_column='Idel_Time', max_length=50, null=True)),
                ('ignition_on_time', models.CharField(blank=True, db_column='Ignition_On_Time', max_length=20, null=True)),
                ('odm_distance', models.CharField(blank=True, db_column='Odm_Distance', max_length=20, null=True)),
                ('max_rpm', models.CharField(blank=True, db_column='Max_RPM', max_length=20, null=True)),
                ('avg_rpm', models.CharField(blank=True, db_column='Avg_RPM', max_length=20, null=True)),
                ('max_coolent', models.CharField(blank=True, db_column='Max_Coolent', max_length=20, null=True)),
                ('avg_coolent', models.CharField(blank=True, db_column='Avg_Coolent', max_length=20, null=True)),
                ('fuel_used', models.CharField(blank=True, db_column='Fuel_Used', max_length=20, null=True)),
                ('avg_eng_load', models.CharField(blank=True, db_column='Avg_Eng_Load', max_length=20, null=True)),
                ('mileage', models.CharField(blank=True, db_column='Mileage', max_length=20, null=True)),
                ('avg_throttle', models.CharField(blank=True, db_column='Avg_Throttle', max_length=20, null=True)),
                ('max_throttle', models.CharField(blank=True, db_column='Max_Throttle', max_length=20, null=True)),
                ('avg_batvolt', models.CharField(blank=True, db_column='Avg_BatVolt', max_length=20, null=True)),
                ('max_batvolt', models.CharField(blank=True, db_column='Max_BatVolt', max_length=20, null=True)),
                ('date_stamp', models.CharField(blank=True, db_column='Date_Stamp', max_length=255, null=True)),
                ('time_stamp', models.CharField(blank=True, db_column='Time_Stamp', max_length=255, null=True)),
                ('epoch_time', models.IntegerField(blank=True, db_column='Epoch_Time', null=True)),
            ],
            options={
                'db_table': 'TRIP_SUMMARY_DATA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAlerts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True)),
                ('alert_index', models.IntegerField(blank=True, db_column='Alert_Index', null=True)),
                ('value', models.IntegerField(blank=True, db_column='Value', null=True)),
            ],
            options={
                'db_table': 'USER_ALERTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=50, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=20, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=20, null=True)),
                ('user_type_id', models.IntegerField(blank=True, db_column='User_Type_ID', null=True)),
                ('account_id', models.IntegerField(blank=True, db_column='Account_ID', null=True)),
                ('e_mail', models.CharField(blank=True, db_column='E_Mail', max_length=180, null=True)),
                ('alerts', models.CharField(blank=True, db_column='Alerts', max_length=2, null=True)),
                ('refresh', models.IntegerField(blank=True, db_column='Refresh', null=True)),
                ('map_size', models.IntegerField(blank=True, db_column='Map_Size', null=True)),
                ('map_api', models.CharField(blank=True, db_column='Map_API', max_length=255, null=True)),
                ('created_on', models.CharField(blank=True, db_column='Created_On', max_length=20, null=True)),
                ('valid_till', models.CharField(blank=True, db_column='Valid_Till', max_length=20, null=True)),
                ('icon_set', models.CharField(blank=True, db_column='Icon_Set', max_length=20, null=True)),
                ('klikof', models.CharField(blank=True, db_column='KlikoF', max_length=20, null=True)),
                ('klikoadmin', models.CharField(blank=True, db_column='KlikoAdmin', max_length=20, null=True)),
            ],
            options={
                'db_table': 'USER_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_status', models.CharField(blank=True, db_column='User_Status', max_length=50, null=True)),
            ],
            options={
                'db_table': 'USER_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('user_type_id', models.AutoField(db_column='User_Type_ID', primary_key=True, serialize=False)),
                ('user_type', models.CharField(blank=True, db_column='User_Type', max_length=255, null=True)),
                ('user_type_description', models.CharField(blank=True, db_column='User_Type_Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'USER_TYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=50, null=True)),
                ('make', models.CharField(blank=True, db_column='Make', max_length=50, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=500, null=True)),
                ('serial_no', models.CharField(blank=True, db_column='Serial_No', max_length=50, null=True)),
                ('plate', models.CharField(blank=True, db_column='Plate', max_length=50, null=True)),
                ('vehicle_condition', models.CharField(blank=True, db_column='Vehicle_Condition', max_length=20, null=True)),
                ('hours', models.IntegerField(blank=True, db_column='Hours', null=True)),
                ('odometer', models.IntegerField(blank=True, db_column='Odometer', null=True)),
                ('vmu_location', models.CharField(blank=True, db_column='VMU_Location', max_length=500, null=True)),
                ('vmu_wiring', models.CharField(blank=True, db_column='VMU_Wiring', max_length=500, null=True)),
                ('base_hub', models.CharField(blank=True, db_column='Base_Hub', max_length=50, null=True)),
                ('comments', models.CharField(blank=True, db_column='Comments', max_length=500, null=True)),
                ('starter', models.CharField(blank=True, db_column='Starter', max_length=10, null=True)),
                ('next_odometer', models.IntegerField(blank=True, db_column='Next_Odometer', null=True)),
            ],
            options={
                'db_table': 'VEHICLE_INFORMATION',
                'managed': False,
            },
        ),
    ]
